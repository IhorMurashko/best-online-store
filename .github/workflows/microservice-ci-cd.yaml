name: Microservice CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - '**'
  pull_request:
    branches: [ main ]
    paths:
      - '**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_services: ${{ steps.set.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: set
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before || github.event.pull_request.base.sha }} ${{ github.sha }})
          SERVICES=""
          for S in auth-service user-service gateway-service; do  
            if echo "$CHANGED" | grep -q "^$S/"; then
              SERVICES="$SERVICES $S"
            fi
          done
          # Записываем output с именем changed
          echo "changed=${SERVICES}" >> $GITHUB_OUTPUT

  build-and-test:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed_services != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ auth-service, user-service, gateway-service ]
    name: CI - ${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
      - name: Build & test ${{ matrix.service }}
        if: contains(needs.detect-changes.outputs.changed_services, matrix.service)
        run: |
          cd ${{ matrix.service }}
            ./mvnw clean verify -Pdev

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: user-service
            secret: RENDER_USER_SERVICE_DEPLOY_HOOK
    #          - service: auth-service
    #            secret: RENDER_DEPLOY_HOOK_URL_AUTH_SERVICE
    #          - service: gateway-service
    #            secret: RENDER_DEPLOY_HOOK_URL_GATEWAY_SERVICE
    name: CD - Deploy ${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Trigger Render deploy for ${{ matrix.service }}
        if: contains(needs.detect-changes.outputs.changed_services, matrix.service)
        run: |
          curl -X POST "${{ secrets[matrix.secret] }}"
